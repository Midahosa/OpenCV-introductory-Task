#include <opencv2/opencv.hpp>
#include <iostream>
#include <stdio.h>
#include "opencv2/core.hpp"
#include "opencv2/imgproc.hpp"
using namespace std;
using namespace cv;

int main()
{


    //read image
    //Green image
    Mat image = imread("image2.jpg");
    //Green image
    //Mat image = imread("image5.jpg");


     //Blue image
    //Mat image = imread("image.jpg");
    //Mat image = imread("image4.jpg");

    //Red image
   // Mat image = imread("image3.jpg");
    //Mat image = imread("image6.jpg");
//    */
    //Convert image from BGR to HSV Green to (black and white)
// what each of the numbers mean inRange(frameHSV, Scalar(lowH, lowS, lowV), Scalar(highH, highS, highV), frameHSV);
    Mat image_HSV,image_GREY;
    cvtColor(image, image_HSV, COLOR_BGR2HSV); // Convert the image to HSV
    inRange(image_HSV, Scalar(35, 68, 57), Scalar(73, 255, 255), image_GREY);

//     Covert image from BGR to HSV blue to (black and white)

    //Mat image_HSV,image_GREY;
   // cvtColor(image, image_HSV, COLOR_BGR2HSV); // Convert the image to HSV
    //inRange(image_HSV, Scalar(95, 0, 0), Scalar(179, 255, 255), image_GREY);


//       Covert image from BGR to HSV (red) to (black and white)

   // Mat image_HSV,image_GREY;
    //cvtColor(image, image_HSV, COLOR_BGR2HSV); // Convert the image to HSV
    //inRange(image_HSV, Scalar(0, 100, 100), Scalar(20, 255, 255), image_GREY);


    //make new image of HSV picture
    cv::imwrite("photo.jpg", image_GREY);
    //combine two of them ( sort this out later)
    /*
        Mat sidebysideImage;
        cv::hconcat(image, image_GREY, sidebysideImage); // Combine horizontally
        cv::imshow("Photo 2", sidebysideImage);
        cv::imwrite("photo.jpg", sidebysideImage); */


    if (image.data == NULL)
    {
        cout << "No image found! Check path." << endl;
        return 1;   //ERROR
    }
    else // display image
    {
        cv::namedWindow("Photo"); // Create a window called photo
        cv::imshow("Photo", image); // Display the frame matrix in the window
        cv::namedWindow("Photo grey"); // Create a window called photo
        cv::imshow("Photo grey", image_GREY);


        cv::waitKey(); // Wait for until a key is pressed

        return 0;//OK
    }

}
