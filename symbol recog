#include <opencv2/opencv.hpp>
#include <iostream>
#include <stdio.h>
#include "opencv2/core.hpp"
#include "opencv2/imgproc.hpp"
using namespace std;
using namespace cv;

int main()
{


    //read image
    Mat image = imread("image7.jpg");


    // convert pink to HSV
    Mat image_HSV,image_GREY;
    cvtColor(image, image_HSV, COLOR_BGR2HSV); // Convert the image to HSV
    inRange(image_HSV, Scalar(150, 50, 50), Scalar(180, 255, 255), image_GREY);




    //make new image of HSV picture
    cv::imwrite("photo.jpg", image_GREY);
    //combine two of them ( sort this out later)
    /*
        Mat sidebysideImage;
        cv::hconcat(image, image_GREY, sidebysideImage); // Combine horizontally
        cv::imwrite("photo.jpg", sidebysideImage); */





    // Find contours in the binary image
    std::vector< std::vector<cv::Point> > contours; // Variable for list of contours
    cv::findContours(image_GREY, contours, cv::RETR_EXTERNAL, cv::CHAIN_APPROX_SIMPLE);

    // Create an output image to draw the contours
    cv::Mat contour_image = cv::Mat::zeros(image_GREY.size(), CV_8UC3);

    // Draw the contours in the output image
    cv::drawContours(contour_image, contours, -1, cv::Scalar(0, 0, 255), 2);

    // Show the contour image
    cv::imshow("Contours", contour_image);
    cv::waitKey(0);









    if (image.data == NULL)
    {
        cout << "No image found! Check path." << endl;
        return 1;   //ERROR
    }
    else // display image
    {
        cv::namedWindow("Photo"); // Create a window called photo
        cv::imshow("Photo", image); // Display the frame matrix in the window
        cv::namedWindow("Photo grey"); // Create a window called photo
        cv::imshow("Photo grey", image_GREY);

        cv::imshow("Contours", contour_image);
        cv::waitKey(0);// Wait for until a key is pressed


        return 0;//OK
    }

}
